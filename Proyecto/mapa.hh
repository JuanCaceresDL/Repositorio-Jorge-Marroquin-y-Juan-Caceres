#pragma once
#include<stdio.h>
#include<windows.h>
#include<conio.h>
#include<stdlib.h>
#include<cstdlib>
#include "personaje.hh"
#include "mapa.hh"
#include "funciones.hh"

#define FIL 34
#define COL 34

int mapa[FIL][COL];

void copiar_nivel1() {
	int mapa1[FIL][COL] = {
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0},
{0,5,8,5,5,5,5,8,8,8,8,5,8,5,5,5,8,5,8,8,8,8,5,8,5,5,5,5,5,5,8,5,5,0},
{0,5,8,5,5,5,5,8,5,5,5,5,8,5,5,5,8,5,8,5,5,5,5,8,5,5,5,5,5,8,8,5,5,0},
{0,5,8,5,5,5,5,8,8,8,8,5,8,8,5,8,8,5,8,8,8,8,5,8,5,5,5,5,5,5,8,5,5,0},
{0,5,8,5,5,5,5,8,5,5,5,5,5,8,5,8,5,5,8,5,5,5,5,8,5,5,5,5,5,5,8,5,5,0},
{0,5,8,8,8,8,5,8,8,8,8,5,5,8,8,8,5,5,8,8,8,8,5,8,8,8,8,5,5,8,8,8,5,0},
{0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,4,4,5,5,4,4,5,5,4,4,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,3,3,3,3,1,1,2,2,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,4,4,5,5,2,2,1,1,4,4,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,3,3,3,3,1,1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0},
{0,0,0,0,0,0,0,0,0,4,4,5,5,2,2,1,1,4,4,5,5,4,4,5,5,4,4,5,5,4,4,5,5,0},
{0,3,3,3,3,3,3,3,3,3,3,3,3,1,1,2,2,1,1,2,2,1,1,2,2,99,99,2,2,3,3,3,3,0},
{0,4,4,5,5,4,4,5,5,4,4,5,5,2,2,1,1,2,2,1,1,2,2,1,1,2,2,99,99,4,4,5,5,0},
{0,3,3,3,3,1,1,2,2,1,1,2,2,1,1,2,2,7,1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,0},
{0,4,4,5,5,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,4,4,5,5,4,4,5,5,4,4,5,5,0},
{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,2,2,3,3,3,3,0,0,0,0,0,0,0,0,0},
{0,4,4,5,5,4,4,5,5,4,4,5,5,4,4,5,5,2,2,1,1,4,4,5,5,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,6,1,2,2,3,3,3,3,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,5,5,2,2,1,1,4,4,5,5,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,5,5,4,4,5,5,4,4,5,5,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},};

	for (int f = 0; f < FIL; f++) {
		for (int c = 0; c < COL; c++) {
			mapa[f][c] = mapa1[c][f];
		}
	}

}

void copiar_nivel2() {
	int mapa2[FIL][COL] = {
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0},
{0,5,8,5,5,5,5,8,8,8,8,5,8,5,5,5,8,5,8,8,8,8,5,8,5,5,5,5,5,8,8,5,5,0},
{0,5,8,5,5,5,5,8,5,5,5,5,8,5,5,5,8,5,8,5,5,5,5,8,5,5,5,5,8,5,5,8,5,0},
{0,5,8,5,5,5,5,8,8,8,8,5,8,8,5,8,8,5,8,8,8,8,5,8,5,5,5,5,5,8,8,5,5,0},
{0,5,8,5,5,5,5,8,5,5,5,5,5,8,5,8,5,5,8,5,5,5,5,8,5,5,5,5,8,5,5,5,5,0},
{0,5,8,8,8,8,5,8,8,8,8,5,5,8,8,8,5,5,8,8,8,8,5,8,8,8,8,5,8,8,8,8,5,0},
{0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,4,4,5,5,4,4,5,5,4,4,5,5,4,4,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,3,3,3,3,6,1,2,2,1,1,2,2,3,3,3,3,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,0},
{0,4,4,5,5,2,2,1,1,2,2,1,1,4,4,5,5,0,0,0,0,4,4,5,5,4,4,5,5,4,4,5,5,0},
{0,3,3,3,3,1,1,2,2,7,1,2,2,3,3,3,3,0,0,0,0,3,3,3,3,99,99,2,2,3,3,3,3,0},
{0,4,4,5,5,2,2,1,1,2,2,1,1,4,4,5,5,0,0,0,0,4,4,5,5,2,2,99,99,4,4,5,5,0},
{0,3,3,3,3,1,1,2,2,1,1,2,2,3,3,3,3,0,0,0,0,3,3,3,3,1,1,2,2,3,3,3,3,0},
{0,4,4,5,5,2,2,1,1,2,2,1,1,4,4,5,5,0,0,0,0,4,4,5,5,2,2,1,1,4,4,5,5,0},
{0,3,3,3,3,3,3,3,3,1,1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,1,1,2,2,3,3,3,3,0},
{0,4,4,5,5,4,4,5,5,2,2,1,1,4,4,5,5,4,4,5,5,4,4,5,5,2,2,1,1,4,4,5,5,0},
{0,3,3,3,3,3,3,3,3,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,3,3,3,3,0},
{0,4,4,5,5,4,4,5,5,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,4,4,5,5,0},
{0,3,3,3,3,1,1,2,2,1,1,2,2,1,1,2,2,3,3,3,3,1,1,2,2,1,1,2,2,3,3,3,3,0},
{0,4,4,5,5,2,2,1,1,2,2,1,1,2,2,1,1,4,4,5,5,2,2,1,1,2,2,1,1,4,4,5,5,0},
{0,3,3,3,3,1,1,2,2,1,1,2,2,1,1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0},
{0,4,4,5,5,2,2,1,1,2,2,1,1,2,2,1,1,4,4,5,5,4,4,5,5,4,4,5,5,4,4,5,5,0},
{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,4,4,5,5,4,4,5,5,4,4,5,5,4,4,5,5,4,4,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},};

	for (int f = 0; f < FIL; f++) {
		for (int c = 0; c < COL; c++) {
			mapa[f][c] = mapa2[c][f];
		}
	}

}

void imprimir_mapa() {
	for (int fil = 0; fil < FIL; fil++) {
		for (int col = 0; col < COL; col++) {
			if (mapa[fil][col] == 1) { //PISO
                    color(1);
				gotoxy(fil,col); printf ("%c", 219);
			}
			if (mapa[fil][col] == 2){ //PISO
                color(9);
				gotoxy(fil,col); printf ("%c", 219);
			}
			if (mapa[fil][col] == 3) {//PARED
                    color(15);
				gotoxy(fil,col); printf ("%c", 177);
			}
			if (mapa[fil][col] == 4) {//PARED
                    color(8);
				gotoxy(fil,col); printf ("%c", 219);
			}
			if (mapa[fil][col] == 5) {//PARED
                    color(8);
				gotoxy(fil,col); printf ("%c", 178);
			}
			if (mapa[fil][col] == 6) {//PERSONAJE INICIAL
			    color(9);
				gotoxy(fil,col); printf ("%c", 219);
			}
			if (mapa[fil][col] == 7) {//CAJA INICIAL
			    color(9);
				gotoxy(fil,col); printf ("%c", 219);
			}
			if (mapa[fil][col] == 8) {//nombre nivel
			    color(12);
				gotoxy(fil,col); printf ("%c", 219);
			}
			if (mapa[fil][col] == 99) {//ganar
			    color(12);
				gotoxy(fil,col); printf ("%c", 219);
			}
		}
	}
}

void clean_map() {
	for (int fil = 0; fil < FIL; fil++) {
		for (int col = 0; col < COL; col++) {
			gotoxy(fil,col);
			if (mapa[fil][col] == 0) {
				gotoxy(fil,col);
			}
			if (mapa[fil][col] == 1) {
                    mapa[fil][col] = 0;
				gotoxy(fil,col); printf ("%c", 32);
			}
			if (mapa[fil][col] == 2) {
			        mapa[fil][col] = 0;
				gotoxy(fil,col); printf ("%c", 32);
			}
			if (mapa[fil][col] == 3) {
			        mapa[fil][col] = 0;
				gotoxy(fil,col); printf ("%c", 32);
			}
			if (mapa[fil][col] == 4) {
			        mapa[fil][col] = 0;
				gotoxy(fil,col); printf ("%c", 32);
			}
			if (mapa[fil][col] == 5) {
			        mapa[fil][col] = 0;
				gotoxy(fil,col); printf ("%c", 32);
			}
			if (mapa[fil][col] == 6) {
			        mapa[fil][col] = 0;
				gotoxy(fil,col); printf ("%c", 32);
			}
			if (mapa[fil][col] == 7) {
                    mapa[fil][col] = 0;
				gotoxy(fil,col); printf ("%c", 32);
			}
			if (mapa[fil][col] == 8) {
				gotoxy(fil,col); printf ("%c", 32);
			}
			if (mapa[fil][col] == 99) {
			        mapa[fil][col] = 0;
				gotoxy(fil,col); printf ("%c", 32);
			}
		}
	}
}
